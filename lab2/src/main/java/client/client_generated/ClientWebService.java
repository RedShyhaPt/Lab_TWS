
package client.client_generated;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ClientWebService", targetNamespace = "http://server/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ClientWebService {


    /**
     * 
     * @param country
     * @param sex
     * @return
     *     returns java.util.List<client.client_generated.Clients>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getClientsByCountryAndSex", targetNamespace = "http://server/", className = "client.client_generated.GetClientsByCountryAndSex")
    @ResponseWrapper(localName = "getClientsByCountryAndSexResponse", targetNamespace = "http://server/", className = "client.client_generated.GetClientsByCountryAndSexResponse")
    @Action(input = "http://server/ClientWebService/getClientsByCountryAndSexRequest", output = "http://server/ClientWebService/getClientsByCountryAndSexResponse")
    public List<Clients> getClientsByCountryAndSex(
        @WebParam(name = "country", targetNamespace = "")
        String country,
        @WebParam(name = "sex", targetNamespace = "")
        String sex);

    /**
     * 
     * @param contact
     * @return
     *     returns java.util.List<client.client_generated.Clients>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getClientsByContact", targetNamespace = "http://server/", className = "client.client_generated.GetClientsByContact")
    @ResponseWrapper(localName = "getClientsByContactResponse", targetNamespace = "http://server/", className = "client.client_generated.GetClientsByContactResponse")
    @Action(input = "http://server/ClientWebService/getClientsByContactRequest", output = "http://server/ClientWebService/getClientsByContactResponse")
    public List<Clients> getClientsByContact(
        @WebParam(name = "contact", targetNamespace = "")
        String contact);

    /**
     * 
     * @param city
     * @param name
     * @return
     *     returns java.util.List<client.client_generated.Clients>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getClientsByNameAndCity", targetNamespace = "http://server/", className = "client.client_generated.GetClientsByNameAndCity")
    @ResponseWrapper(localName = "getClientsByNameAndCityResponse", targetNamespace = "http://server/", className = "client.client_generated.GetClientsByNameAndCityResponse")
    @Action(input = "http://server/ClientWebService/getClientsByNameAndCityRequest", output = "http://server/ClientWebService/getClientsByNameAndCityResponse")
    public List<Clients> getClientsByNameAndCity(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "city", targetNamespace = "")
        String city);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "echoBinaryAsString", targetNamespace = "http://server/", className = "client.client_generated.EchoBinaryAsString")
    @ResponseWrapper(localName = "echoBinaryAsStringResponse", targetNamespace = "http://server/", className = "client.client_generated.EchoBinaryAsStringResponse")
    @Action(input = "http://server/ClientWebService/echoBinaryAsStringRequest", output = "http://server/ClientWebService/echoBinaryAsStringResponse")
    public String echoBinaryAsString(
        @WebParam(name = "arg0", targetNamespace = "")
        byte[] arg0);

    /**
     * 
     * @param country
     * @param city
     * @param contact
     * @param sex
     * @param name
     * @param id
     * @return
     *     returns java.util.List<client.client_generated.Clients>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createNewClient", targetNamespace = "http://server/", className = "client.client_generated.CreateNewClient")
    @ResponseWrapper(localName = "createNewClientResponse", targetNamespace = "http://server/", className = "client.client_generated.CreateNewClientResponse")
    @Action(input = "http://server/ClientWebService/createNewClientRequest", output = "http://server/ClientWebService/createNewClientResponse")
    public List<Clients> createNewClient(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "city", targetNamespace = "")
        String city,
        @WebParam(name = "country", targetNamespace = "")
        String country,
        @WebParam(name = "contact", targetNamespace = "")
        String contact,
        @WebParam(name = "sex", targetNamespace = "")
        String sex);

    /**
     * 
     * @return
     *     returns java.util.List<client.client_generated.Clients>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllClients", targetNamespace = "http://server/", className = "client.client_generated.GetAllClients")
    @ResponseWrapper(localName = "getAllClientsResponse", targetNamespace = "http://server/", className = "client.client_generated.GetAllClientsResponse")
    @Action(input = "http://server/ClientWebService/getAllClientsRequest", output = "http://server/ClientWebService/getAllClientsResponse")
    public List<Clients> getAllClients();

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteClient", targetNamespace = "http://server/", className = "client.client_generated.DeleteClient")
    @ResponseWrapper(localName = "deleteClientResponse", targetNamespace = "http://server/", className = "client.client_generated.DeleteClientResponse")
    @Action(input = "http://server/ClientWebService/deleteClientRequest", output = "http://server/ClientWebService/deleteClientResponse")
    public String deleteClient(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "getBinary", targetNamespace = "http://server/", className = "client.client_generated.GetBinary")
    @ResponseWrapper(localName = "getBinaryResponse", targetNamespace = "http://server/", className = "client.client_generated.GetBinaryResponse")
    @Action(input = "http://server/ClientWebService/getBinaryRequest", output = "http://server/ClientWebService/getBinaryResponse")
    public void getBinary(
        @WebParam(name = "arg0", targetNamespace = "")
        byte[] arg0);

    /**
     * 
     * @param id
     * @return
     *     returns java.util.List<client.client_generated.Clients>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getClientsById", targetNamespace = "http://server/", className = "client.client_generated.GetClientsById")
    @ResponseWrapper(localName = "getClientsByIdResponse", targetNamespace = "http://server/", className = "client.client_generated.GetClientsByIdResponse")
    @Action(input = "http://server/ClientWebService/getClientsByIdRequest", output = "http://server/ClientWebService/getClientsByIdResponse")
    public List<Clients> getClientsById(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param country
     * @param city
     * @param contact
     * @param sex
     * @param name
     * @param id
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateClient", targetNamespace = "http://server/", className = "client.client_generated.UpdateClient")
    @ResponseWrapper(localName = "updateClientResponse", targetNamespace = "http://server/", className = "client.client_generated.UpdateClientResponse")
    @Action(input = "http://server/ClientWebService/updateClientRequest", output = "http://server/ClientWebService/updateClientResponse")
    public String updateClient(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "city", targetNamespace = "")
        String city,
        @WebParam(name = "country", targetNamespace = "")
        String country,
        @WebParam(name = "contact", targetNamespace = "")
        String contact,
        @WebParam(name = "sex", targetNamespace = "")
        String sex);

    /**
     * 
     * @param city
     * @return
     *     returns java.util.List<client.client_generated.Clients>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getClientsByCity", targetNamespace = "http://server/", className = "client.client_generated.GetClientsByCity")
    @ResponseWrapper(localName = "getClientsByCityResponse", targetNamespace = "http://server/", className = "client.client_generated.GetClientsByCityResponse")
    @Action(input = "http://server/ClientWebService/getClientsByCityRequest", output = "http://server/ClientWebService/getClientsByCityResponse")
    public List<Clients> getClientsByCity(
        @WebParam(name = "city", targetNamespace = "")
        String city);

    /**
     * 
     * @param name
     * @return
     *     returns java.util.List<client.client_generated.Clients>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getClientsByName", targetNamespace = "http://server/", className = "client.client_generated.GetClientsByName")
    @ResponseWrapper(localName = "getClientsByNameResponse", targetNamespace = "http://server/", className = "client.client_generated.GetClientsByNameResponse")
    @Action(input = "http://server/ClientWebService/getClientsByNameRequest", output = "http://server/ClientWebService/getClientsByNameResponse")
    public List<Clients> getClientsByName(
        @WebParam(name = "name", targetNamespace = "")
        String name);

}
